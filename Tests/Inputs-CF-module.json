{
  "Name": "TestModule",
  "Version": "1.0",
  "Description": "LambdaSharp CloudFormation Test",
  "Pragmas": [],
  "Secrets": [
    {
      "Fn::If": [
        "LambdaSharpDefaultSecretKeyArnIsImport",
        {
          "Fn::ImportValue": {
            "Fn::Sub": [
              "${@DeploymentPrefix}${Import}",
              {
                "Import": {
                  "Fn::Select": [
                    "1",
                    {
                      "Fn::Split": [
                        "$",
                        {
                          "Ref": "@LambdaSharpDefaultSecretKeyArn"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "Ref": "@LambdaSharpDefaultSecretKeyArn"
        }
      ]
    }
  ],
  "Outputs": [],
  "Conditions": {
    "OtherModuleExportValueIsImport": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Fn::Split": [
                "$",
                {
                  "Ref": "@OtherModuleExportValue"
                }
              ]
            }
          ]
        },
        ""
      ]
    },
    "OtherModuleExportSecretIsImport": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Fn::Split": [
                "$",
                {
                  "Ref": "@OtherModuleExportSecret"
                }
              ]
            }
          ]
        },
        ""
      ]
    },
    "ResourceInputParameterOrCreateCreated": {
      "Fn::Equals": [
        {
          "Ref": "@ResourceInputParameterOrCreate"
        },
        ""
      ]
    },
    "OtherModuleExportResourceIsImport": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Fn::Split": [
                "$",
                {
                  "Ref": "@OtherModuleExportResource"
                }
              ]
            }
          ]
        },
        ""
      ]
    },
    "SecretsIsEmpty": {
      "Fn::Equals": [
        {
          "Ref": "@Secrets"
        },
        ""
      ]
    },
    "LambdaSharpDeadLetterQueueArnIsImport": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Fn::Split": [
                "$",
                {
                  "Ref": "@LambdaSharpDeadLetterQueueArn"
                }
              ]
            }
          ]
        },
        ""
      ]
    },
    "LambdaSharpLoggingStreamArnIsImport": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Fn::Split": [
                "$",
                {
                  "Ref": "@LambdaSharpLoggingStreamArn"
                }
              ]
            }
          ]
        },
        ""
      ]
    },
    "LambdaSharpDefaultSecretKeyArnIsImport": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Fn::Split": [
                "$",
                {
                  "Ref": "@LambdaSharpDefaultSecretKeyArn"
                }
              ]
            }
          ]
        },
        ""
      ]
    }
  },
  "ResourceStatements": [
    {
      "Sid": "SecretsDecryption",
      "Effect": "Allow",
      "Principal": null,
      "NotPrincipal": null,
      "Action": [
        "kms:Decrypt",
        "kms:Encrypt",
        "kms:GenerateDataKey",
        "kms:GenerateDataKeyWithoutPlaintext"
      ],
      "NotAction": null,
      "Resource": {
        "Fn::Split": [
          ",",
          {
            "Fn::If": [
              "SecretsIsEmpty",
              "",
              {
                "Fn::Join": [
                  ",",
                  [
                    "",
                    {
                      "Ref": "@Secrets"
                    }
                  ]
                ]
              }
            ]
          }
        ]
      },
      "NotResource": null,
      "Condition": null
    },
    {
      "Sid": "ModuleDeadLetterQueueLogging",
      "Effect": "Allow",
      "Principal": null,
      "NotPrincipal": null,
      "Action": [
        "sqs:SendMessage"
      ],
      "NotAction": null,
      "Resource": {
        "Fn::If": [
          "LambdaSharpDeadLetterQueueArnIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@LambdaSharpDeadLetterQueueArn"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@LambdaSharpDeadLetterQueueArn"
          }
        ]
      },
      "NotResource": null,
      "Condition": null
    },
    {
      "Sid": "ModuleLogStreamAccess",
      "Effect": "Allow",
      "Principal": null,
      "NotPrincipal": null,
      "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
      ],
      "NotAction": null,
      "Resource": "arn:aws:logs:*:*:*",
      "NotResource": null,
      "Condition": null
    }
  ],
  "Grants": [
    {
      "Sid": "ResourceInputParameter",
      "References": [
        {
          "Ref": "@ResourceInputParameter"
        },
        {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "@ResourceInputParameter"
              },
              "/*"
            ]
          ]
        }
      ],
      "Allow": [
        "s3:GetObject",
        "s3:GetObjectAcl",
        "s3:GetObjectTagging",
        "s3:GetObjectTorrent",
        "s3:GetObjectVersion",
        "s3:GetObjectVersionAcl",
        "s3:GetObjectVersionTagging",
        "s3:GetObjectVersionTorrent"
      ]
    },
    {
      "Sid": "ResourceInputParameterOrCreateResource",
      "References": {
        "Fn::If": [
          "ResourceInputParameterOrCreateCreated",
          {
            "Ref": "@ResourceInputParameterOrCreateResource"
          },
          {
            "Ref": "@ResourceInputParameterOrCreate"
          }
        ]
      },
      "Allow": [
        "sns:Publish"
      ]
    },
    {
      "Sid": "OtherModuleExportResource",
      "References": [
        {
          "Fn::If": [
            "OtherModuleExportResourceIsImport",
            {
              "Fn::ImportValue": {
                "Fn::Sub": [
                  "${@DeploymentPrefix}${Import}",
                  {
                    "Import": {
                      "Fn::Select": [
                        "1",
                        {
                          "Fn::Split": [
                            "$",
                            {
                              "Ref": "@OtherModuleExportResource"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "Ref": "@OtherModuleExportResource"
            }
          ]
        },
        {
          "Fn::Join": [
            "/",
            [
              {
                "Fn::If": [
                  "OtherModuleExportResourceIsImport",
                  {
                    "Fn::ImportValue": {
                      "Fn::Sub": [
                        "${@DeploymentPrefix}${Import}",
                        {
                          "Import": {
                            "Fn::Select": [
                              "1",
                              {
                                "Fn::Split": [
                                  "$",
                                  {
                                    "Ref": "@OtherModuleExportResource"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "Ref": "@OtherModuleExportResource"
                  }
                ]
              },
              "stream",
              "*"
            ]
          ]
        },
        {
          "Fn::Join": [
            "/",
            [
              {
                "Fn::If": [
                  "OtherModuleExportResourceIsImport",
                  {
                    "Fn::ImportValue": {
                      "Fn::Sub": [
                        "${@DeploymentPrefix}${Import}",
                        {
                          "Import": {
                            "Fn::Select": [
                              "1",
                              {
                                "Fn::Split": [
                                  "$",
                                  {
                                    "Ref": "@OtherModuleExportResource"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "Ref": "@OtherModuleExportResource"
                  }
                ]
              },
              "index",
              "*"
            ]
          ]
        }
      ],
      "Allow": [
        "dynamodb:BatchGetItem",
        "dynamodb:DescribeStream",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
      ]
    }
  ],
  "Entries": [
    {
      "Section": "Plain Input Parameters",
      "Label": "Input Parameter",
      "Parameter": {
        "Type": "String",
        "Description": "required input parameter",
        "AllowedPattern": null,
        "AllowedValues": null,
        "ConstraintDescription": null,
        "Default": null,
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "InputParameter",
      "FullName": "InputParameter",
      "ResourceName": "@InputParameter",
      "LogicalId": "InputParameter",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "@InputParameter"
      },
      "IsSecret": false
    },
    {
      "Section": "Plain Input Parameters",
      "Label": "Input Parameter With Default",
      "Parameter": {
        "Type": "String",
        "Description": "input parameter with a default value",
        "AllowedPattern": null,
        "AllowedValues": null,
        "ConstraintDescription": null,
        "Default": "a default value",
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "InputParameterWithDefault",
      "FullName": "InputParameterWithDefault",
      "ResourceName": "@InputParameterWithDefault",
      "LogicalId": "InputParameterWithDefault",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "@InputParameterWithDefault"
      },
      "IsSecret": false
    },
    {
      "Section": "Plain Input Parameters",
      "Label": "Secret Input Parameter",
      "Parameter": {
        "Type": "String",
        "Description": "encrypted input parameter",
        "AllowedPattern": null,
        "AllowedValues": null,
        "ConstraintDescription": null,
        "Default": null,
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "SecretInputParameter",
      "FullName": "SecretInputParameter",
      "ResourceName": "@SecretInputParameter",
      "LogicalId": "SecretInputParameter",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "@SecretInputParameter"
      },
      "IsSecret": true
    },
    {
      "Name": "OtherModule",
      "FullName": "OtherModule",
      "ResourceName": "@OtherModule",
      "LogicalId": "OtherModule",
      "Description": null,
      "Scope": [],
      "Reference": "",
      "IsSecret": false
    },
    {
      "Section": "Cross-Module References",
      "Label": "Export Value",
      "Parameter": {
        "Type": "String",
        "Description": "cross-module import reference",
        "AllowedPattern": "^.+$",
        "AllowedValues": null,
        "ConstraintDescription": "must either be a cross-module import reference or a non-blank value",
        "Default": "$OtherModule::ExportValue",
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "ExportValue",
      "FullName": "OtherModule::ExportValue",
      "ResourceName": "@OtherModuleExportValue",
      "LogicalId": "OtherModuleExportValue",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::If": [
          "OtherModuleExportValueIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@OtherModuleExportValue"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@OtherModuleExportValue"
          }
        ]
      },
      "IsSecret": false
    },
    {
      "Section": "Cross-Module References",
      "Label": "Export Secret",
      "Parameter": {
        "Type": "String",
        "Description": "cross-module import reference",
        "AllowedPattern": "^.+$",
        "AllowedValues": null,
        "ConstraintDescription": "must either be a cross-module import reference or a non-blank value",
        "Default": "$OtherModule::ExportSecret",
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "ExportSecret",
      "FullName": "OtherModule::ExportSecret",
      "ResourceName": "@OtherModuleExportSecret",
      "LogicalId": "OtherModuleExportSecret",
      "Description": null,
      "Scope": [
        "Function"
      ],
      "Reference": {
        "Fn::If": [
          "OtherModuleExportSecretIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@OtherModuleExportSecret"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@OtherModuleExportSecret"
          }
        ]
      },
      "IsSecret": true
    },
    {
      "Section": "Resource Input Parameters",
      "Label": "Resource Input Parameter",
      "Parameter": {
        "Type": "String",
        "Description": null,
        "AllowedPattern": null,
        "AllowedValues": null,
        "ConstraintDescription": null,
        "Default": null,
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "ResourceInputParameter",
      "FullName": "ResourceInputParameter",
      "ResourceName": "@ResourceInputParameter",
      "LogicalId": "ResourceInputParameter",
      "Description": null,
      "Scope": [
        "Function"
      ],
      "Reference": {
        "Ref": "@ResourceInputParameter"
      },
      "IsSecret": false
    },
    {
      "Section": "Resource Input Parameters",
      "Label": "Resource Input Parameter Or Create",
      "Parameter": {
        "Type": "String",
        "Description": null,
        "AllowedPattern": null,
        "AllowedValues": null,
        "ConstraintDescription": null,
        "Default": "",
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "ResourceInputParameterOrCreate",
      "FullName": "ResourceInputParameterOrCreate",
      "ResourceName": "@ResourceInputParameterOrCreate",
      "LogicalId": "ResourceInputParameterOrCreate",
      "Description": null,
      "Scope": [
        "Function"
      ],
      "Reference": {
        "Fn::If": [
          "ResourceInputParameterOrCreateCreated",
          {
            "Ref": "@ResourceInputParameterOrCreateResource"
          },
          {
            "Ref": "@ResourceInputParameterOrCreate"
          }
        ]
      },
      "IsSecret": false
    },
    {
      "Resource": {},
      "DependsOn": [],
      "Condition": "ResourceInputParameterOrCreateCreated",
      "Name": "Resource",
      "FullName": "ResourceInputParameterOrCreate::Resource",
      "ResourceName": "@ResourceInputParameterOrCreateResource",
      "LogicalId": "ResourceInputParameterOrCreateResource",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "@ResourceInputParameterOrCreateResource"
      },
      "IsSecret": false
    },
    {
      "Section": "Resource Input Parameters",
      "Label": "Export Resource",
      "Parameter": {
        "Type": "String",
        "Description": null,
        "AllowedPattern": "^.+$",
        "AllowedValues": null,
        "ConstraintDescription": "must either be a cross-module import reference or a non-blank value",
        "Default": "$OtherModule::ExportResource",
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "ExportResource",
      "FullName": "OtherModule::ExportResource",
      "ResourceName": "@OtherModuleExportResource",
      "LogicalId": "OtherModuleExportResource",
      "Description": null,
      "Scope": [
        "Function"
      ],
      "Reference": {
        "Fn::If": [
          "OtherModuleExportResourceIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@OtherModuleExportResource"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@OtherModuleExportResource"
          }
        ]
      },
      "IsSecret": false
    },
    {
      "Name": "Input",
      "FullName": "Input",
      "ResourceName": "@Input",
      "LogicalId": "Input",
      "Description": null,
      "Scope": [
        "Function"
      ],
      "Reference": {
        "Ref": "@InputParameter"
      },
      "IsSecret": false
    },
    {
      "Name": "InputWithDefault",
      "FullName": "InputWithDefault",
      "ResourceName": "@InputWithDefault",
      "LogicalId": "InputWithDefault",
      "Description": null,
      "Scope": [
        "Function"
      ],
      "Reference": {
        "Ref": "@InputParameterWithDefault"
      },
      "IsSecret": false
    },
    {
      "Name": "SecretInput",
      "FullName": "SecretInput",
      "ResourceName": "@SecretInput",
      "LogicalId": "SecretInput",
      "Description": null,
      "Scope": [
        "Function"
      ],
      "Reference": {
        "Ref": "@SecretInputParameter"
      },
      "IsSecret": false
    },
    {
      "Name": "ImportedInput",
      "FullName": "ImportedInput",
      "ResourceName": "@ImportedInput",
      "LogicalId": "ImportedInput",
      "Description": null,
      "Scope": [
        "Function"
      ],
      "Reference": {
        "Fn::If": [
          "OtherModuleExportValueIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@OtherModuleExportValue"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@OtherModuleExportValue"
          }
        ]
      },
      "IsSecret": false
    },
    {
      "Name": "HiddenImportParameter",
      "FullName": "HiddenImportParameter",
      "ResourceName": "@HiddenImportParameter",
      "LogicalId": "HiddenImportParameter",
      "Description": null,
      "Scope": [
        "Function"
      ],
      "Reference": {
        "Fn::If": [
          "LambdaSharpLoggingStreamArnIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@LambdaSharpLoggingStreamArn"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@LambdaSharpLoggingStreamArn"
          }
        ]
      },
      "IsSecret": false
    },
    {
      "Project": null,
      "Language": "csharp",
      "Environment": {},
      "Sources": [],
      "Pragmas": [],
      "Function": {
        "AWSTypeName": "AWS::Lambda::Function",
        "Code": {
          "S3Bucket": null,
          "S3Key": null,
          "S3ObjectVersion": null,
          "ZipFile": "Function-NOCOMPILE.zip"
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::If": [
              "LambdaSharpDeadLetterQueueArnIsImport",
              {
                "Fn::ImportValue": {
                  "Fn::Sub": [
                    "${@DeploymentPrefix}${Import}",
                    {
                      "Import": {
                        "Fn::Select": [
                          "1",
                          {
                            "Fn::Split": [
                              "$",
                              {
                                "Ref": "@LambdaSharpDeadLetterQueueArn"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "Ref": "@LambdaSharpDeadLetterQueueArn"
              }
            ]
          }
        },
        "Description": "My function (v1.0)",
        "Environment": {
          "Variables": {
            "MODULE_NAME": "TestModule",
            "MODULE_ID": {
              "Ref": "AWS::StackName"
            },
            "MODULE_VERSION": "1.0",
            "LAMBDA_NAME": "Function",
            "LAMBDA_RUNTIME": "dotnetcore2.1",
            "DEADLETTERQUEUE": {
              "Fn::If": [
                "LambdaSharpDeadLetterQueueArnIsImport",
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": [
                      "${@DeploymentPrefix}${Import}",
                      {
                        "Import": {
                          "Fn::Select": [
                            "1",
                            {
                              "Fn::Split": [
                                "$",
                                {
                                  "Ref": "@LambdaSharpDeadLetterQueueArn"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "Ref": "@LambdaSharpDeadLetterQueueArn"
                }
              ]
            },
            "DEFAULTSECRETKEY": {
              "Fn::If": [
                "LambdaSharpDefaultSecretKeyArnIsImport",
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": [
                      "${@DeploymentPrefix}${Import}",
                      {
                        "Import": {
                          "Fn::Select": [
                            "1",
                            {
                              "Fn::Split": [
                                "$",
                                {
                                  "Ref": "@LambdaSharpDefaultSecretKeyArn"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "Ref": "@LambdaSharpDefaultSecretKeyArn"
                }
              ]
            },
            "SEC_OTHERMODULE_EXPORTSECRET": {
              "Fn::If": [
                "OtherModuleExportSecretIsImport",
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": [
                      "${@DeploymentPrefix}${Import}",
                      {
                        "Import": {
                          "Fn::Select": [
                            "1",
                            {
                              "Fn::Split": [
                                "$",
                                {
                                  "Ref": "@OtherModuleExportSecret"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "Ref": "@OtherModuleExportSecret"
                }
              ]
            },
            "STR_RESOURCEINPUTPARAMETER": {
              "Ref": "@ResourceInputParameter"
            },
            "STR_RESOURCEINPUTPARAMETERORCREATE": {
              "Fn::If": [
                "ResourceInputParameterOrCreateCreated",
                {
                  "Ref": "@ResourceInputParameterOrCreateResource"
                },
                {
                  "Ref": "@ResourceInputParameterOrCreate"
                }
              ]
            },
            "STR_OTHERMODULE_EXPORTRESOURCE": {
              "Fn::If": [
                "OtherModuleExportResourceIsImport",
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": [
                      "${@DeploymentPrefix}${Import}",
                      {
                        "Import": {
                          "Fn::Select": [
                            "1",
                            {
                              "Fn::Split": [
                                "$",
                                {
                                  "Ref": "@OtherModuleExportResource"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "Ref": "@OtherModuleExportResource"
                }
              ]
            },
            "STR_INPUT": {
              "Ref": "@InputParameter"
            },
            "STR_INPUTWITHDEFAULT": {
              "Ref": "@InputParameterWithDefault"
            },
            "STR_SECRETINPUT": {
              "Ref": "@SecretInputParameter"
            },
            "STR_IMPORTEDINPUT": {
              "Fn::If": [
                "OtherModuleExportValueIsImport",
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": [
                      "${@DeploymentPrefix}${Import}",
                      {
                        "Import": {
                          "Fn::Select": [
                            "1",
                            {
                              "Fn::Split": [
                                "$",
                                {
                                  "Ref": "@OtherModuleExportValue"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "Ref": "@OtherModuleExportValue"
                }
              ]
            },
            "STR_HIDDENIMPORTPARAMETER": {
              "Fn::If": [
                "LambdaSharpLoggingStreamArnIsImport",
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": [
                      "${@DeploymentPrefix}${Import}",
                      {
                        "Import": {
                          "Fn::Select": [
                            "1",
                            {
                              "Fn::Split": [
                                "$",
                                {
                                  "Ref": "@LambdaSharpLoggingStreamArn"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "Ref": "@LambdaSharpLoggingStreamArn"
                }
              ]
            }
          }
        },
        "FunctionName": null,
        "Handler": "TestModule.Function::MindTouch.LambdaSharpTestModule.Function.Function::FunctionHandlerAsync",
        "KmsKeyArn": null,
        "MemorySize": "128",
        "ReservedConcurrentExecutions": null,
        "Role": {
          "Fn::GetAtt": [
            "Module::Role",
            "Arn"
          ]
        },
        "Runtime": "dotnetcore2.1",
        "Tags": null,
        "Timeout": "30",
        "TracingConfig": null,
        "VpcConfig": null
      },
      "HasFunctionRegistration": true,
      "Name": "Function",
      "FullName": "Function",
      "ResourceName": "@Function",
      "LogicalId": "Function",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "@Function"
      },
      "IsSecret": false
    },
    {
      "Name": "Module",
      "FullName": "Module",
      "ResourceName": "@Module",
      "LogicalId": "Module",
      "Description": null,
      "Scope": [],
      "Reference": "",
      "IsSecret": false
    },
    {
      "Name": "Id",
      "FullName": "Module::Id",
      "ResourceName": "@ModuleId",
      "LogicalId": "ModuleId",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "AWS::StackName"
      },
      "IsSecret": false
    },
    {
      "Name": "Name",
      "FullName": "Module::Name",
      "ResourceName": "@ModuleName",
      "LogicalId": "ModuleName",
      "Description": null,
      "Scope": [],
      "Reference": "TestModule",
      "IsSecret": false
    },
    {
      "Name": "Version",
      "FullName": "Module::Version",
      "ResourceName": "@ModuleVersion",
      "LogicalId": "ModuleVersion",
      "Description": null,
      "Scope": [],
      "Reference": "1.0",
      "IsSecret": false
    },
    {
      "Section": "LambdaSharp Module Options",
      "Label": "Secret Keys (ARNs)",
      "Parameter": {
        "Type": "String",
        "Description": "Comma-separated list of optional secret keys",
        "AllowedPattern": null,
        "AllowedValues": null,
        "ConstraintDescription": null,
        "Default": "",
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "Secrets",
      "FullName": "Secrets",
      "ResourceName": "@Secrets",
      "LogicalId": "Secrets",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "@Secrets"
      },
      "IsSecret": false
    },
    {
      "Name": "LambdaSharp",
      "FullName": "LambdaSharp",
      "ResourceName": "@LambdaSharp",
      "LogicalId": "LambdaSharp",
      "Description": null,
      "Scope": [],
      "Reference": "",
      "IsSecret": false
    },
    {
      "Section": "LambdaSharp Dependencies",
      "Label": "Dead Letter Queue (ARN)",
      "Parameter": {
        "Type": "String",
        "Description": "Dead letter queue for functions",
        "AllowedPattern": "^.+$",
        "AllowedValues": null,
        "ConstraintDescription": "must either be a cross-module import reference or a non-blank value",
        "Default": "$LambdaSharp::DeadLetterQueueArn",
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "DeadLetterQueueArn",
      "FullName": "LambdaSharp::DeadLetterQueueArn",
      "ResourceName": "@LambdaSharpDeadLetterQueueArn",
      "LogicalId": "LambdaSharpDeadLetterQueueArn",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::If": [
          "LambdaSharpDeadLetterQueueArnIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@LambdaSharpDeadLetterQueueArn"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@LambdaSharpDeadLetterQueueArn"
          }
        ]
      },
      "IsSecret": false
    },
    {
      "Section": "LambdaSharp Dependencies",
      "Label": "Logging Stream (ARN)",
      "Parameter": {
        "Type": "String",
        "Description": "Logging kinesis stream for functions",
        "AllowedPattern": "^.+$",
        "AllowedValues": null,
        "ConstraintDescription": "must either be a cross-module import reference or a non-blank value",
        "Default": "$LambdaSharp::LoggingStreamArn",
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "LoggingStreamArn",
      "FullName": "LambdaSharp::LoggingStreamArn",
      "ResourceName": "@LambdaSharpLoggingStreamArn",
      "LogicalId": "LambdaSharpLoggingStreamArn",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::If": [
          "LambdaSharpLoggingStreamArnIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@LambdaSharpLoggingStreamArn"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@LambdaSharpLoggingStreamArn"
          }
        ]
      },
      "IsSecret": false
    },
    {
      "Section": "LambdaSharp Dependencies",
      "Label": "Secret Key (ARN)",
      "Parameter": {
        "Type": "String",
        "Description": "Default secret key for functions",
        "AllowedPattern": "^.+$",
        "AllowedValues": null,
        "ConstraintDescription": "must either be a cross-module import reference or a non-blank value",
        "Default": "$LambdaSharp::DefaultSecretKeyArn",
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "DefaultSecretKeyArn",
      "FullName": "LambdaSharp::DefaultSecretKeyArn",
      "ResourceName": "@LambdaSharpDefaultSecretKeyArn",
      "LogicalId": "LambdaSharpDefaultSecretKeyArn",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::If": [
          "LambdaSharpDefaultSecretKeyArnIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@LambdaSharpDefaultSecretKeyArn"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@LambdaSharpDefaultSecretKeyArn"
          }
        ]
      },
      "IsSecret": false
    },
    {
      "Name": "DeadLetterQueueArn",
      "FullName": "Module::DeadLetterQueueArn",
      "ResourceName": "@ModuleDeadLetterQueueArn",
      "LogicalId": "ModuleDeadLetterQueueArn",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::If": [
          "LambdaSharpDeadLetterQueueArnIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@LambdaSharpDeadLetterQueueArn"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@LambdaSharpDeadLetterQueueArn"
          }
        ]
      },
      "IsSecret": false
    },
    {
      "Name": "LoggingStreamArn",
      "FullName": "Module::LoggingStreamArn",
      "ResourceName": "@ModuleLoggingStreamArn",
      "LogicalId": "ModuleLoggingStreamArn",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::If": [
          "LambdaSharpLoggingStreamArnIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@LambdaSharpLoggingStreamArn"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@LambdaSharpLoggingStreamArn"
          }
        ]
      },
      "IsSecret": false
    },
    {
      "Name": "DefaultSecretKeyArn",
      "FullName": "Module::DefaultSecretKeyArn",
      "ResourceName": "@ModuleDefaultSecretKeyArn",
      "LogicalId": "ModuleDefaultSecretKeyArn",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::If": [
          "LambdaSharpDefaultSecretKeyArnIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@LambdaSharpDefaultSecretKeyArn"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@LambdaSharpDefaultSecretKeyArn"
          }
        ]
      },
      "IsSecret": false
    },
    {
      "Section": "LambdaSharp Deployment Settings (DO NOT MODIFY)",
      "Label": "Deployment S3 Bucket",
      "Parameter": {
        "Type": "String",
        "Description": "Source deployment S3 bucket name",
        "AllowedPattern": null,
        "AllowedValues": null,
        "ConstraintDescription": null,
        "Default": null,
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "DeploymentBucketName",
      "FullName": "DeploymentBucketName",
      "ResourceName": "@DeploymentBucketName",
      "LogicalId": "DeploymentBucketName",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "@DeploymentBucketName"
      },
      "IsSecret": false
    },
    {
      "Section": "LambdaSharp Deployment Settings (DO NOT MODIFY)",
      "Label": "Deployment Prefix",
      "Parameter": {
        "Type": "String",
        "Description": "Module deployment prefix",
        "AllowedPattern": null,
        "AllowedValues": null,
        "ConstraintDescription": null,
        "Default": null,
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "DeploymentPrefix",
      "FullName": "DeploymentPrefix",
      "ResourceName": "@DeploymentPrefix",
      "LogicalId": "DeploymentPrefix",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "@DeploymentPrefix"
      },
      "IsSecret": false
    },
    {
      "Section": "LambdaSharp Deployment Settings (DO NOT MODIFY)",
      "Label": "Deployment Prefix (lowercase)",
      "Parameter": {
        "Type": "String",
        "Description": "Module deployment prefix (lowercase)",
        "AllowedPattern": null,
        "AllowedValues": null,
        "ConstraintDescription": null,
        "Default": null,
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "DeploymentPrefixLowercase",
      "FullName": "DeploymentPrefixLowercase",
      "ResourceName": "@DeploymentPrefixLowercase",
      "LogicalId": "DeploymentPrefixLowercase",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "@DeploymentPrefixLowercase"
      },
      "IsSecret": false
    },
    {
      "Section": "LambdaSharp Deployment Settings (DO NOT MODIFY)",
      "Label": "Parent Stack Name",
      "Parameter": {
        "Type": "String",
        "Description": "Parent stack name for nested deployments, blank otherwise",
        "AllowedPattern": null,
        "AllowedValues": null,
        "ConstraintDescription": null,
        "Default": "",
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "DeploymentParent",
      "FullName": "DeploymentParent",
      "ResourceName": "@DeploymentParent",
      "LogicalId": "DeploymentParent",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "@DeploymentParent"
      },
      "IsSecret": false
    },
    {
      "Resource": {
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Sub": "${@DeploymentPrefix}CustomResource-LambdaSharp::Register::Module"
          }
        },
        "ModuleId": {
          "Ref": "AWS::StackName"
        },
        "ModuleName": "TestModule",
        "ModuleVersion": "1.0"
      },
      "DependsOn": [],
      "Condition": null,
      "Name": "Registration",
      "FullName": "Module::Registration",
      "ResourceName": "@ModuleRegistration",
      "LogicalId": "ModuleRegistration",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "AWS::NoValue"
      },
      "IsSecret": false
    },
    {
      "Resource": {
        "AWSTypeName": "AWS::IAM::Role",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Id": null,
          "Statement": [
            {
              "Sid": "ModuleLambdaInvocation",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "NotPrincipal": null,
              "Action": "sts:AssumeRole",
              "NotAction": null,
              "Resource": null,
              "NotResource": null,
              "Condition": null
            }
          ]
        },
        "ManagedPolicyArns": null,
        "MaxSessionDuration": null,
        "Path": null,
        "Policies": [
          {
            "AWSTypeName": "AWS::IAM::Policy",
            "Groups": null,
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Id": null,
              "Statement": [
                {
                  "Sid": "SecretsDecryption",
                  "Effect": "Allow",
                  "Principal": null,
                  "NotPrincipal": null,
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:GenerateDataKey",
                    "kms:GenerateDataKeyWithoutPlaintext"
                  ],
                  "NotAction": null,
                  "Resource": {
                    "Fn::Split": [
                      ",",
                      {
                        "Fn::If": [
                          "SecretsIsEmpty",
                          "",
                          {
                            "Fn::Join": [
                              ",",
                              [
                                "",
                                {
                                  "Ref": "@Secrets"
                                }
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "NotResource": null,
                  "Condition": null
                },
                {
                  "Sid": "ModuleDeadLetterQueueLogging",
                  "Effect": "Allow",
                  "Principal": null,
                  "NotPrincipal": null,
                  "Action": [
                    "sqs:SendMessage"
                  ],
                  "NotAction": null,
                  "Resource": {
                    "Fn::If": [
                      "LambdaSharpDeadLetterQueueArnIsImport",
                      {
                        "Fn::ImportValue": {
                          "Fn::Sub": [
                            "${@DeploymentPrefix}${Import}",
                            {
                              "Import": {
                                "Fn::Select": [
                                  "1",
                                  {
                                    "Fn::Split": [
                                      "$",
                                      {
                                        "Ref": "@LambdaSharpDeadLetterQueueArn"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "Ref": "@LambdaSharpDeadLetterQueueArn"
                      }
                    ]
                  },
                  "NotResource": null,
                  "Condition": null
                },
                {
                  "Sid": "ModuleLogStreamAccess",
                  "Effect": "Allow",
                  "Principal": null,
                  "NotPrincipal": null,
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "NotAction": null,
                  "Resource": "arn:aws:logs:*:*:*",
                  "NotResource": null,
                  "Condition": null
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${AWS::StackName}ModulePolicy"
            },
            "Roles": null,
            "Users": null
          }
        ],
        "RoleName": null
      },
      "DependsOn": [],
      "Condition": null,
      "Name": "Role",
      "FullName": "Module::Role",
      "ResourceName": "@ModuleRole",
      "LogicalId": "ModuleRole",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::GetAtt": [
          "@ModuleRole",
          "Arn"
        ]
      },
      "IsSecret": false
    },
    {
      "Resource": {
        "AWSTypeName": "AWS::IAM::Role",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Id": null,
          "Statement": [
            {
              "Sid": "CloudWatchLogsKinesisInvocation",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Sub": "logs.${AWS::Region}.amazonaws.com"
                }
              },
              "NotPrincipal": null,
              "Action": "sts:AssumeRole",
              "NotAction": null,
              "Resource": null,
              "NotResource": null,
              "Condition": null
            }
          ]
        },
        "ManagedPolicyArns": null,
        "MaxSessionDuration": null,
        "Path": null,
        "Policies": [
          {
            "AWSTypeName": "AWS::IAM::Policy",
            "Groups": null,
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Id": null,
              "Statement": [
                {
                  "Sid": "CloudWatchLogsKinesisPermissions",
                  "Effect": "Allow",
                  "Principal": null,
                  "NotPrincipal": null,
                  "Action": "kinesis:PutRecord",
                  "NotAction": null,
                  "Resource": {
                    "Fn::If": [
                      "LambdaSharpLoggingStreamArnIsImport",
                      {
                        "Fn::ImportValue": {
                          "Fn::Sub": [
                            "${@DeploymentPrefix}${Import}",
                            {
                              "Import": {
                                "Fn::Select": [
                                  "1",
                                  {
                                    "Fn::Split": [
                                      "$",
                                      {
                                        "Ref": "@LambdaSharpLoggingStreamArn"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "Ref": "@LambdaSharpLoggingStreamArn"
                      }
                    ]
                  },
                  "NotResource": null,
                  "Condition": null
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${AWS::StackName}ModuleCloudWatchLogsPolicy"
            },
            "Roles": null,
            "Users": null
          }
        ],
        "RoleName": null
      },
      "DependsOn": [],
      "Condition": null,
      "Name": "CloudWatchLogsRole",
      "FullName": "Module::CloudWatchLogsRole",
      "ResourceName": "@ModuleCloudWatchLogsRole",
      "LogicalId": "ModuleCloudWatchLogsRole",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::GetAtt": [
          "@ModuleCloudWatchLogsRole",
          "Arn"
        ]
      },
      "IsSecret": false
    },
    {
      "Resource": {
        "AWSTypeName": "AWS::Logs::LogGroup",
        "LogGroupName": {
          "Fn::Sub": "/aws/lambda/${@Function}"
        },
        "RetentionInDays": 7
      },
      "DependsOn": [],
      "Condition": null,
      "Name": "LogGroup",
      "FullName": "Function::LogGroup",
      "ResourceName": "@FunctionLogGroup",
      "LogicalId": "FunctionLogGroup",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::GetAtt": [
          "@FunctionLogGroup",
          "Arn"
        ]
      },
      "IsSecret": false
    },
    {
      "Resource": {
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Sub": "${@DeploymentPrefix}CustomResource-LambdaSharp::Register::Function"
          }
        },
        "ModuleId": {
          "Ref": "AWS::StackName"
        },
        "FunctionId": {
          "Ref": "@Function"
        },
        "FunctionName": "Function",
        "FunctionLogGroupName": {
          "Fn::Sub": "/aws/lambda/${@Function}"
        },
        "FunctionPlatform": "AWS Lambda",
        "FunctionFramework": "dotnetcore2.1",
        "FunctionLanguage": "csharp",
        "FunctionMaxMemory": "128",
        "FunctionMaxDuration": "30"
      },
      "DependsOn": [
        "ModuleRegistration"
      ],
      "Condition": null,
      "Name": "Registration",
      "FullName": "Function::Registration",
      "ResourceName": "@FunctionRegistration",
      "LogicalId": "FunctionRegistration",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "AWS::NoValue"
      },
      "IsSecret": false
    },
    {
      "Resource": {
        "AWSTypeName": "AWS::Logs::SubscriptionFilter",
        "DestinationArn": {
          "Fn::If": [
            "LambdaSharpLoggingStreamArnIsImport",
            {
              "Fn::ImportValue": {
                "Fn::Sub": [
                  "${@DeploymentPrefix}${Import}",
                  {
                    "Import": {
                      "Fn::Select": [
                        "1",
                        {
                          "Fn::Split": [
                            "$",
                            {
                              "Ref": "@LambdaSharpLoggingStreamArn"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "Ref": "@LambdaSharpLoggingStreamArn"
            }
          ]
        },
        "FilterPattern": "-\"*** \"",
        "LogGroupName": {
          "Fn::GetAtt": [
            "@FunctionLogGroup",
            "Arn"
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "Module::CloudWatchLogsRole",
            "Arn"
          ]
        }
      },
      "DependsOn": [],
      "Condition": null,
      "Name": "LogGroupSubscription",
      "FullName": "Function::LogGroupSubscription",
      "ResourceName": "@FunctionLogGroupSubscription",
      "LogicalId": "FunctionLogGroupSubscription",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::GetAtt": [
          "@FunctionLogGroupSubscription",
          "Arn"
        ]
      },
      "IsSecret": false
    }
  ]
}