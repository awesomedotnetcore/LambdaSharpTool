{
  "Name": "TestModule",
  "Version": "1.0",
  "Description": "LambdaSharp CloudFormation Test",
  "Pragmas": [],
  "Secrets": [
    {
      "Fn::If": [
        "LambdaSharpDefaultSecretKeyArnIsImport",
        {
          "Fn::ImportValue": {
            "Fn::Sub": [
              "${@DeploymentPrefix}${Import}",
              {
                "Import": {
                  "Fn::Select": [
                    "1",
                    {
                      "Fn::Split": [
                        "$",
                        {
                          "Ref": "@LambdaSharpDefaultSecretKeyArn"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "Ref": "@LambdaSharpDefaultSecretKeyArn"
        }
      ]
    }
  ],
  "Outputs": [],
  "Conditions": {
    "SecretsIsEmpty": {
      "Fn::Equals": [
        {
          "Ref": "@Secrets"
        },
        ""
      ]
    },
    "LambdaSharpDeadLetterQueueArnIsImport": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Fn::Split": [
                "$",
                {
                  "Ref": "@LambdaSharpDeadLetterQueueArn"
                }
              ]
            }
          ]
        },
        ""
      ]
    },
    "LambdaSharpLoggingStreamArnIsImport": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Fn::Split": [
                "$",
                {
                  "Ref": "@LambdaSharpLoggingStreamArn"
                }
              ]
            }
          ]
        },
        ""
      ]
    },
    "LambdaSharpDefaultSecretKeyArnIsImport": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Fn::Split": [
                "$",
                {
                  "Ref": "@LambdaSharpDefaultSecretKeyArn"
                }
              ]
            }
          ]
        },
        ""
      ]
    }
  },
  "ResourceStatements": [
    {
      "Sid": "SecretsDecryption",
      "Effect": "Allow",
      "Principal": null,
      "NotPrincipal": null,
      "Action": [
        "kms:Decrypt",
        "kms:Encrypt",
        "kms:GenerateDataKey",
        "kms:GenerateDataKeyWithoutPlaintext"
      ],
      "NotAction": null,
      "Resource": {
        "Fn::Split": [
          ",",
          {
            "Fn::If": [
              "SecretsIsEmpty",
              "",
              {
                "Fn::Join": [
                  ",",
                  [
                    "",
                    {
                      "Ref": "Secrets"
                    }
                  ]
                ]
              }
            ]
          }
        ]
      },
      "NotResource": null,
      "Condition": null
    },
    {
      "Sid": "ModuleDeadLetterQueueLogging",
      "Effect": "Allow",
      "Principal": null,
      "NotPrincipal": null,
      "Action": [
        "sqs:SendMessage"
      ],
      "NotAction": null,
      "Resource": {
        "Ref": "Module::DeadLetterQueueArn"
      },
      "NotResource": null,
      "Condition": null
    }
  ],
  "Grants": [],
  "Entries": [
    {
      "Resource": {
        "Result": {
          "Fn::GetAZs": "us-west-1"
        },
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Sub": "${@DeploymentPrefix}CustomResource-CustomResource::Handler"
          }
        }
      },
      "DependsOn": [],
      "Condition": null,
      "Name": "MyResource",
      "FullName": "MyResource",
      "ResourceName": "@MyResource",
      "LogicalId": "MyResource",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "AWS::NoValue"
      }
    },
    {
      "IsSecret": false,
      "Name": "Module",
      "FullName": "Module",
      "ResourceName": "@Module",
      "LogicalId": "Module",
      "Description": null,
      "Scope": [],
      "Reference": ""
    },
    {
      "IsSecret": false,
      "Name": "Id",
      "FullName": "Module::Id",
      "ResourceName": "@ModuleId",
      "LogicalId": "ModuleId",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "AWS::StackName"
      }
    },
    {
      "IsSecret": false,
      "Name": "Name",
      "FullName": "Module::Name",
      "ResourceName": "@ModuleName",
      "LogicalId": "ModuleName",
      "Description": null,
      "Scope": [],
      "Reference": "TestModule"
    },
    {
      "IsSecret": false,
      "Name": "Version",
      "FullName": "Module::Version",
      "ResourceName": "@ModuleVersion",
      "LogicalId": "ModuleVersion",
      "Description": null,
      "Scope": [],
      "Reference": "1.0"
    },
    {
      "Section": "LambdaSharp Module Options",
      "Label": "Secret Keys (ARNs)",
      "IsSecret": false,
      "Parameter": {
        "Type": "String",
        "Description": "Comma-separated list of optional secret keys",
        "AllowedPattern": null,
        "AllowedValues": null,
        "ConstraintDescription": null,
        "Default": "",
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "Secrets",
      "FullName": "Secrets",
      "ResourceName": "@Secrets",
      "LogicalId": "Secrets",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "@Secrets"
      }
    },
    {
      "IsSecret": false,
      "Name": "LambdaSharp",
      "FullName": "LambdaSharp",
      "ResourceName": "@LambdaSharp",
      "LogicalId": "LambdaSharp",
      "Description": null,
      "Scope": [],
      "Reference": ""
    },
    {
      "Section": "LambdaSharp Dependencies",
      "Label": "Dead Letter Queue (ARN)",
      "IsSecret": false,
      "Parameter": {
        "Type": "String",
        "Description": "Dead letter queue for functions",
        "AllowedPattern": "^.+$",
        "AllowedValues": null,
        "ConstraintDescription": "must either be a cross-module import reference or a non-blank value",
        "Default": "$LambdaSharp::DeadLetterQueueArn",
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "DeadLetterQueueArn",
      "FullName": "LambdaSharp::DeadLetterQueueArn",
      "ResourceName": "@LambdaSharpDeadLetterQueueArn",
      "LogicalId": "LambdaSharpDeadLetterQueueArn",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::If": [
          "LambdaSharpDeadLetterQueueArnIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@LambdaSharpDeadLetterQueueArn"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@LambdaSharpDeadLetterQueueArn"
          }
        ]
      }
    },
    {
      "Section": "LambdaSharp Dependencies",
      "Label": "Logging Stream (ARN)",
      "IsSecret": false,
      "Parameter": {
        "Type": "String",
        "Description": "Logging kinesis stream for functions",
        "AllowedPattern": "^.+$",
        "AllowedValues": null,
        "ConstraintDescription": "must either be a cross-module import reference or a non-blank value",
        "Default": "$LambdaSharp::LoggingStreamArn",
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "LoggingStreamArn",
      "FullName": "LambdaSharp::LoggingStreamArn",
      "ResourceName": "@LambdaSharpLoggingStreamArn",
      "LogicalId": "LambdaSharpLoggingStreamArn",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::If": [
          "LambdaSharpLoggingStreamArnIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@LambdaSharpLoggingStreamArn"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@LambdaSharpLoggingStreamArn"
          }
        ]
      }
    },
    {
      "Section": "LambdaSharp Dependencies",
      "Label": "Secret Key (ARN)",
      "IsSecret": false,
      "Parameter": {
        "Type": "String",
        "Description": "Default secret key for functions",
        "AllowedPattern": "^.+$",
        "AllowedValues": null,
        "ConstraintDescription": "must either be a cross-module import reference or a non-blank value",
        "Default": "$LambdaSharp::DefaultSecretKeyArn",
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "DefaultSecretKeyArn",
      "FullName": "LambdaSharp::DefaultSecretKeyArn",
      "ResourceName": "@LambdaSharpDefaultSecretKeyArn",
      "LogicalId": "LambdaSharpDefaultSecretKeyArn",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::If": [
          "LambdaSharpDefaultSecretKeyArnIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@LambdaSharpDefaultSecretKeyArn"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@LambdaSharpDefaultSecretKeyArn"
          }
        ]
      }
    },
    {
      "IsSecret": false,
      "Name": "DeadLetterQueueArn",
      "FullName": "Module::DeadLetterQueueArn",
      "ResourceName": "@ModuleDeadLetterQueueArn",
      "LogicalId": "ModuleDeadLetterQueueArn",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::If": [
          "LambdaSharpDeadLetterQueueArnIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@LambdaSharpDeadLetterQueueArn"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@LambdaSharpDeadLetterQueueArn"
          }
        ]
      }
    },
    {
      "IsSecret": false,
      "Name": "LoggingStreamArn",
      "FullName": "Module::LoggingStreamArn",
      "ResourceName": "@ModuleLoggingStreamArn",
      "LogicalId": "ModuleLoggingStreamArn",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::If": [
          "LambdaSharpLoggingStreamArnIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@LambdaSharpLoggingStreamArn"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@LambdaSharpLoggingStreamArn"
          }
        ]
      }
    },
    {
      "IsSecret": false,
      "Name": "DefaultSecretKeyArn",
      "FullName": "Module::DefaultSecretKeyArn",
      "ResourceName": "@ModuleDefaultSecretKeyArn",
      "LogicalId": "ModuleDefaultSecretKeyArn",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Fn::If": [
          "LambdaSharpDefaultSecretKeyArnIsImport",
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${@DeploymentPrefix}${Import}",
                {
                  "Import": {
                    "Fn::Select": [
                      "1",
                      {
                        "Fn::Split": [
                          "$",
                          {
                            "Ref": "@LambdaSharpDefaultSecretKeyArn"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "Ref": "@LambdaSharpDefaultSecretKeyArn"
          }
        ]
      }
    },
    {
      "Section": "LambdaSharp Deployment Settings (DO NOT MODIFY)",
      "Label": "Deployment S3 Bucket",
      "IsSecret": false,
      "Parameter": {
        "Type": "String",
        "Description": "Source deployment S3 bucket name",
        "AllowedPattern": null,
        "AllowedValues": null,
        "ConstraintDescription": null,
        "Default": null,
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "DeploymentBucketName",
      "FullName": "DeploymentBucketName",
      "ResourceName": "@DeploymentBucketName",
      "LogicalId": "DeploymentBucketName",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "@DeploymentBucketName"
      }
    },
    {
      "Section": "LambdaSharp Deployment Settings (DO NOT MODIFY)",
      "Label": "Deployment Prefix",
      "IsSecret": false,
      "Parameter": {
        "Type": "String",
        "Description": "Module deployment prefix",
        "AllowedPattern": null,
        "AllowedValues": null,
        "ConstraintDescription": null,
        "Default": null,
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "DeploymentPrefix",
      "FullName": "DeploymentPrefix",
      "ResourceName": "@DeploymentPrefix",
      "LogicalId": "DeploymentPrefix",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "@DeploymentPrefix"
      }
    },
    {
      "Section": "LambdaSharp Deployment Settings (DO NOT MODIFY)",
      "Label": "Deployment Prefix (lowercase)",
      "IsSecret": false,
      "Parameter": {
        "Type": "String",
        "Description": "Module deployment prefix (lowercase)",
        "AllowedPattern": null,
        "AllowedValues": null,
        "ConstraintDescription": null,
        "Default": null,
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "DeploymentPrefixLowercase",
      "FullName": "DeploymentPrefixLowercase",
      "ResourceName": "@DeploymentPrefixLowercase",
      "LogicalId": "DeploymentPrefixLowercase",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "@DeploymentPrefixLowercase"
      }
    },
    {
      "Section": "LambdaSharp Deployment Settings (DO NOT MODIFY)",
      "Label": "Parent Stack Name",
      "IsSecret": false,
      "Parameter": {
        "Type": "String",
        "Description": "Parent stack name for nested deployments, blank otherwise",
        "AllowedPattern": null,
        "AllowedValues": null,
        "ConstraintDescription": null,
        "Default": "",
        "MinLength": null,
        "MaxLength": null,
        "MinValue": null,
        "MaxValue": null,
        "NoEcho": null
      },
      "Name": "DeploymentParent",
      "FullName": "DeploymentParent",
      "ResourceName": "@DeploymentParent",
      "LogicalId": "DeploymentParent",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "@DeploymentParent"
      }
    },
    {
      "Resource": {
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Sub": "${@DeploymentPrefix}CustomResource-LambdaSharp::Register::Module"
          }
        },
        "ModuleId": {
          "Ref": "AWS::StackName"
        },
        "ModuleName": "TestModule",
        "ModuleVersion": "1.0"
      },
      "DependsOn": [],
      "Condition": null,
      "Name": "Registration",
      "FullName": "Module::Registration",
      "ResourceName": "@ModuleRegistration",
      "LogicalId": "ModuleRegistration",
      "Description": null,
      "Scope": [],
      "Reference": {
        "Ref": "AWS::NoValue"
      }
    }
  ]
}