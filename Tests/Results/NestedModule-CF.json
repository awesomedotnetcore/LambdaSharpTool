{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "LambdaSharp CloudFormation Test (v1.0)",
  "Parameters": {
    "Secrets": {
      "Type": "String",
      "Description": "Comma-separated list of optional secret keys",
      "Default": ""
    },
    "LambdaSharpDeadLetterQueueArn": {
      "Type": "String",
      "Description": "Dead letter queue for functions",
      "AllowedPattern": "^.+$",
      "ConstraintDescription": "must either be a cross-module import reference or a non-empty value",
      "Default": "$LambdaSharp::DeadLetterQueueArn"
    },
    "LambdaSharpLoggingStreamArn": {
      "Type": "String",
      "Description": "Logging kinesis stream for functions",
      "AllowedPattern": "^.+$",
      "ConstraintDescription": "must either be a cross-module import reference or a non-empty value",
      "Default": "$LambdaSharp::LoggingStreamArn"
    },
    "LambdaSharpDefaultSecretKeyArn": {
      "Type": "String",
      "Description": "Default secret key for functions",
      "AllowedPattern": "^.+$",
      "ConstraintDescription": "must either be a cross-module import reference or a non-empty value",
      "Default": "$LambdaSharp::DefaultSecretKeyArn"
    },
    "DeploymentBucketName": {
      "Type": "String",
      "Description": "Source deployment S3 bucket name"
    },
    "DeploymentPrefix": {
      "Type": "String",
      "Description": "Module deployment prefix"
    },
    "DeploymentPrefixLowercase": {
      "Type": "String",
      "Description": "Module deployment prefix (lowercase)"
    },
    "DeploymentParent": {
      "Type": "String",
      "Description": "Parent stack name for nested deployments, blank otherwise",
      "Default": ""
    },
    "DeploymentChecksum": {
      "Type": "String",
      "Description": "CloudFormation template MD5 checksum",
      "Default": "C6886E7BFECD24FFE46984B315A981B8"
    }
  },
  "Resources": {
    "Test": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "NotificationARNs": {
          "Ref": "AWS::NotificationARNs"
        },
        "Parameters": {
          "LambdaSharpDeadLetterQueueArn": {
            "Fn::If": [
              "LambdaSharpDeadLetterQueueArnImported",
              {
                "Fn::ImportValue": {
                  "Fn::Sub": [
                    "${DeploymentPrefix}${Import}",
                    {
                      "Import": {
                        "Fn::Select": [
                          "1",
                          {
                            "Fn::Split": [
                              "$",
                              {
                                "Ref": "LambdaSharpDeadLetterQueueArn"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "Ref": "LambdaSharpDeadLetterQueueArn"
              }
            ]
          },
          "LambdaSharpLoggingStreamArn": {
            "Fn::If": [
              "LambdaSharpLoggingStreamArnImported",
              {
                "Fn::ImportValue": {
                  "Fn::Sub": [
                    "${DeploymentPrefix}${Import}",
                    {
                      "Import": {
                        "Fn::Select": [
                          "1",
                          {
                            "Fn::Split": [
                              "$",
                              {
                                "Ref": "LambdaSharpLoggingStreamArn"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "Ref": "LambdaSharpLoggingStreamArn"
              }
            ]
          },
          "LambdaSharpDefaultSecretKeyArn": {
            "Fn::If": [
              "LambdaSharpDefaultSecretKeyArnImported",
              {
                "Fn::ImportValue": {
                  "Fn::Sub": [
                    "${DeploymentPrefix}${Import}",
                    {
                      "Import": {
                        "Fn::Select": [
                          "1",
                          {
                            "Fn::Split": [
                              "$",
                              {
                                "Ref": "LambdaSharpDefaultSecretKeyArn"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "Ref": "LambdaSharpDefaultSecretKeyArn"
              }
            ]
          },
          "DeploymentBucketName": {
            "Ref": "DeploymentBucketName"
          },
          "DeploymentPrefix": {
            "Ref": "DeploymentPrefix"
          },
          "DeploymentPrefixLowercase": {
            "Ref": "DeploymentPrefixLowercase"
          },
          "DeploymentParent": {
            "Ref": "AWS::StackName"
          }
        },
        "TemplateURL": {
          "Fn::Sub": "https://${DeploymentBucketName}.s3.${AWS::Region}.amazonaws.com/Modules/TestModule/Versions/1.0/cloudformation.json"
        },
        "TimeoutInMinutes": 5
      }
    },
    "ModuleRegistration": {
      "Type": "Custom::LambdaSharpRegisterModule",
      "Properties": {
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Sub": "${DeploymentPrefix}CustomResource-LambdaSharp::Register::Module"
          }
        },
        "ModuleId": {
          "Ref": "AWS::StackName"
        },
        "ModuleName": "TestModule2",
        "ModuleVersion": "1.0"
      }
    }
  },
  "Outputs": {
    "ModuleName": {
      "Value": "TestModule2"
    },
    "ModuleVersion": {
      "Value": "1.0"
    }
  },
  "Conditions": {
    "SecretsIsEmpty": {
      "Fn::Equals": [
        {
          "Ref": "Secrets"
        },
        ""
      ]
    },
    "LambdaSharpDeadLetterQueueArnImported": {
      "Fn::And": [
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "LambdaSharpDeadLetterQueueArn"
                },
                ""
              ]
            }
          ]
        },
        {
          "Fn::Equals": [
            {
              "Fn::Select": [
                "0",
                {
                  "Fn::Split": [
                    "$",
                    {
                      "Ref": "LambdaSharpDeadLetterQueueArn"
                    }
                  ]
                }
              ]
            },
            ""
          ]
        }
      ]
    },
    "LambdaSharpLoggingStreamArnImported": {
      "Fn::And": [
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "LambdaSharpLoggingStreamArn"
                },
                ""
              ]
            }
          ]
        },
        {
          "Fn::Equals": [
            {
              "Fn::Select": [
                "0",
                {
                  "Fn::Split": [
                    "$",
                    {
                      "Ref": "LambdaSharpLoggingStreamArn"
                    }
                  ]
                }
              ]
            },
            ""
          ]
        }
      ]
    },
    "LambdaSharpDefaultSecretKeyArnImported": {
      "Fn::And": [
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "LambdaSharpDefaultSecretKeyArn"
                },
                ""
              ]
            }
          ]
        },
        {
          "Fn::Equals": [
            {
              "Fn::Select": [
                "0",
                {
                  "Fn::Split": [
                    "$",
                    {
                      "Ref": "LambdaSharpDefaultSecretKeyArn"
                    }
                  ]
                }
              ]
            },
            ""
          ]
        }
      ]
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterLabels": {
        "Secrets": {
          "default": "Secret Keys (ARNs)"
        },
        "LambdaSharpDeadLetterQueueArn": {
          "default": "Dead Letter Queue (ARN)"
        },
        "LambdaSharpLoggingStreamArn": {
          "default": "Logging Stream (ARN)"
        },
        "LambdaSharpDefaultSecretKeyArn": {
          "default": "Secret Key (ARN)"
        },
        "DeploymentBucketName": {
          "default": "Deployment S3 Bucket"
        },
        "DeploymentPrefix": {
          "default": "Deployment Prefix"
        },
        "DeploymentPrefixLowercase": {
          "default": "Deployment Prefix (lowercase)"
        },
        "DeploymentParent": {
          "default": "Parent Stack Name"
        },
        "DeploymentChecksum": {
          "default": "Deployment Checksum"
        }
      },
      "ParameterGroups": [
        {
          "Label": {
            "default": "LambdaSharp Module Options"
          },
          "Parameters": [
            "Secrets"
          ]
        },
        {
          "Label": {
            "default": "LambdaSharp Dependencies"
          },
          "Parameters": [
            "LambdaSharpDeadLetterQueueArn",
            "LambdaSharpLoggingStreamArn",
            "LambdaSharpDefaultSecretKeyArn"
          ]
        },
        {
          "Label": {
            "default": "LambdaSharp Deployment Settings (DO NOT MODIFY)"
          },
          "Parameters": [
            "DeploymentBucketName",
            "DeploymentPrefix",
            "DeploymentPrefixLowercase",
            "DeploymentParent",
            "DeploymentChecksum"
          ]
        }
      ]
    },
    "LambdaSharp::Manifest": {
      "Version": "2018-12-17",
      "ModuleName": "TestModule2",
      "ModuleVersion": "1.0",
      "RuntimeCheck": true,
      "Hash": "C6886E7BFECD24FFE46984B315A981B8",
      "GitSha": "0123456789ABCDEF0123456789ABCDEF01234567",
      "Assets": [],
      "Dependencies": [
        {
          "ModuleName": "LambdaSharpRegistrar",
          "MinVersion": "0.5-WIP"
        }
      ],
      "CustomResourceTypes": {},
      "MacroNames": [],
      "ResourceNameMappings": {
        "ModuleRegistration": "Module::Registration"
      },
      "CustomResourceNameMappings": {
        "Custom::LambdaSharpRegisterModule": "LambdaSharp::Register::Module",
        "Custom::LambdaSharpRegisterFunction": "LambdaSharp::Register::Function"
      }
    }
  }
}