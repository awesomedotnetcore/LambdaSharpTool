{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "LambdaSharp CloudFormation Test (v1.0)",
  "Parameters": {
    "MyParameter": {
      "Type": "String"
    },
    "Secrets": {
      "Type": "String",
      "Description": "Comma-separated list of optional secret keys",
      "Default": ""
    },
    "DeploymentBucketName": {
      "Type": "String",
      "Description": "Source deployment S3 bucket name"
    },
    "DeploymentPrefix": {
      "Type": "String",
      "Description": "Module deployment prefix"
    },
    "DeploymentPrefixLowercase": {
      "Type": "String",
      "Description": "Module deployment prefix (lowercase)"
    },
    "DeploymentParent": {
      "Type": "String",
      "Description": "Parent stack name for nested deployments, blank otherwise",
      "Default": ""
    },
    "DeploymentChecksum": {
      "Type": "String",
      "Description": "CloudFormation template MD5 checksum",
      "Default": "72002FFB6C85B551547EBE9EBEF59926"
    }
  },
  "Resources": {
    "MyResource": {
      "Type": "AWS::SNS::Topic",
      "Condition": "MyCondition",
      "Properties": {}
    },
    "ModuleRegistration": {
      "Type": "Custom::LambdaSharpRegisterModule",
      "Properties": {
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Sub": "${DeploymentPrefix}CustomResource-LambdaSharp::Register::Module"
          }
        },
        "ModuleId": {
          "Ref": "AWS::StackName"
        },
        "ModuleInfo": "Test.TestModule:1.0"
      }
    }
  },
  "Outputs": {
    "ModuleInfo": {
      "Value": "Test.TestModule:1.0"
    }
  },
  "Conditions": {
    "MyCondition": {
      "Fn::Equals": [
        {
          "Ref": "MyParameter"
        },
        "value"
      ]
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterLabels": {
        "MyParameter": {
          "default": "My Parameter"
        },
        "Secrets": {
          "default": "Secret Keys (ARNs)"
        },
        "DeploymentBucketName": {
          "default": "Deployment S3 Bucket"
        },
        "DeploymentPrefix": {
          "default": "Deployment Prefix"
        },
        "DeploymentPrefixLowercase": {
          "default": "Deployment Prefix (lowercase)"
        },
        "DeploymentParent": {
          "default": "Parent Stack Name"
        },
        "DeploymentChecksum": {
          "default": "Deployment Checksum"
        }
      },
      "ParameterGroups": [
        {
          "Label": {
            "default": "Module Settings"
          },
          "Parameters": [
            "MyParameter"
          ]
        },
        {
          "Label": {
            "default": "LambdaSharp Module Options"
          },
          "Parameters": [
            "Secrets"
          ]
        },
        {
          "Label": {
            "default": "LambdaSharp Deployment Settings (DO NOT MODIFY)"
          },
          "Parameters": [
            "DeploymentBucketName",
            "DeploymentPrefix",
            "DeploymentPrefixLowercase",
            "DeploymentParent",
            "DeploymentChecksum"
          ]
        }
      ]
    },
    "LambdaSharp::Manifest": {
      "Version": "2018-12-31",
      "ModuleInfo": "Test.TestModule:1.0",
      "ParameterSections": [
        {
          "Title": "Module Settings",
          "Parameters": [
            {
              "Name": "MyParameter",
              "Type": "String",
              "Label": "My Parameter"
            }
          ]
        },
        {
          "Title": "LambdaSharp Module Options",
          "Parameters": [
            {
              "Name": "Secrets",
              "Type": "String",
              "Description": "Comma-separated list of optional secret keys",
              "Label": "Secret Keys (ARNs)",
              "Default": ""
            }
          ]
        }
      ],
      "RuntimeCheck": true,
      "Hash": "72002FFB6C85B551547EBE9EBEF59926",
      "GitSha": "0123456789ABCDEF0123456789ABCDEF01234567",
      "Assets": [],
      "Dependencies": [
        {
          "ModuleFullName": "LambdaSharp.Core",
          "MinVersion": "0.5-WIP"
        }
      ],
      "CustomResourceTypes": {},
      "MacroNames": [],
      "ResourceNameMappings": {
        "ModuleRegistration": "Module::Registration"
      },
      "CustomResourceNameMappings": {
        "Custom::LambdaSharpRegisterModule": "LambdaSharp::Register::Module"
      }
    }
  }
}