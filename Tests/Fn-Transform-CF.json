{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "LambdaSharp CloudFormation Test (v1.0)",
  "Parameters": {
    "RootDomainName": {
      "Type": "String",
      "Default": "example.org"
    },
    "Secrets": {
      "Type": "String",
      "Description": "Comma-separated list of optional secret keys",
      "Default": ""
    },
    "LambdaSharpDeadLetterQueueArn": {
      "Type": "String",
      "Description": "Dead letter queue for functions",
      "AllowedPattern": "^.+$",
      "ConstraintDescription": "must either be a cross-module import reference or a non-blank value",
      "Default": "$LambdaSharp::DeadLetterQueueArn"
    },
    "LambdaSharpLoggingStreamArn": {
      "Type": "String",
      "Description": "Logging kinesis stream for functions",
      "AllowedPattern": "^.+$",
      "ConstraintDescription": "must either be a cross-module import reference or a non-blank value",
      "Default": "$LambdaSharp::LoggingStreamArn"
    },
    "LambdaSharpDefaultSecretKeyArn": {
      "Type": "String",
      "Description": "Default secret key for functions",
      "AllowedPattern": "^.+$",
      "ConstraintDescription": "must either be a cross-module import reference or a non-blank value",
      "Default": "$LambdaSharp::DefaultSecretKeyArn"
    },
    "DeploymentBucketName": {
      "Type": "String",
      "Description": "Source deployment S3 bucket name"
    },
    "DeploymentPrefix": {
      "Type": "String",
      "Description": "Module deployment prefix"
    },
    "DeploymentPrefixLowercase": {
      "Type": "String",
      "Description": "Module deployment prefix (lowercase)"
    },
    "DeploymentParent": {
      "Type": "String",
      "Description": "Parent stack name for nested deployments, blank otherwise",
      "Default": ""
    }
  },
  "Resources": {
    "MyResource": {
      "Type": "Custom::CustomResourceHandler",
      "Properties": {
        "Result1": {
          "Fn::Transform": {
            "Name": "MacroName1",
            "Parameters": {
              "Param1": "Value1"
            }
          }
        },
        "Result2": {
          "Fn::Transform": {
            "Name": "MacroName2",
            "Parameters": {
              "Param1": "Value2"
            }
          }
        },
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Sub": "${DeploymentPrefix}CustomResource-CustomResource::Handler"
          }
        }
      }
    },
    "ModuleRegistration": {
      "Type": "Custom::LambdaSharpRegisterModule",
      "Properties": {
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Sub": "${DeploymentPrefix}CustomResource-LambdaSharp::Register::Module"
          }
        },
        "ModuleId": {
          "Ref": "AWS::StackName"
        },
        "ModuleName": "TestModule",
        "ModuleVersion": "1.0"
      }
    }
  },
  "Outputs": {
    "ModuleName": {
      "Value": "TestModule"
    },
    "ModuleVersion": {
      "Value": "1.0"
    }
  },
  "Conditions": {
    "SecretsIsEmpty": {
      "Fn::Equals": [
        {
          "Ref": "Secrets"
        },
        ""
      ]
    },
    "LambdaSharpDeadLetterQueueArnIsImport": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Fn::Split": [
                "$",
                {
                  "Ref": "LambdaSharpDeadLetterQueueArn"
                }
              ]
            }
          ]
        },
        ""
      ]
    },
    "LambdaSharpLoggingStreamArnIsImport": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Fn::Split": [
                "$",
                {
                  "Ref": "LambdaSharpLoggingStreamArn"
                }
              ]
            }
          ]
        },
        ""
      ]
    },
    "LambdaSharpDefaultSecretKeyArnIsImport": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Fn::Split": [
                "$",
                {
                  "Ref": "LambdaSharpDefaultSecretKeyArn"
                }
              ]
            }
          ]
        },
        ""
      ]
    },
    "ModuleIsNotNested": {
      "Fn::Equals": [
        {
          "Ref": "DeploymentParent"
        },
        ""
      ]
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterLabels": {
        "RootDomainName": {
          "default": "Root Domain Name"
        },
        "Secrets": {
          "default": "Secret Keys (ARNs)"
        },
        "LambdaSharpDeadLetterQueueArn": {
          "default": "Dead Letter Queue (ARN)"
        },
        "LambdaSharpLoggingStreamArn": {
          "default": "Logging Stream (ARN)"
        },
        "LambdaSharpDefaultSecretKeyArn": {
          "default": "Secret Key (ARN)"
        },
        "DeploymentBucketName": {
          "default": "Deployment S3 Bucket"
        },
        "DeploymentPrefix": {
          "default": "Deployment Prefix"
        },
        "DeploymentPrefixLowercase": {
          "default": "Deployment Prefix (lowercase)"
        },
        "DeploymentParent": {
          "default": "Parent Stack Name"
        }
      },
      "ParameterGroups": [
        {
          "Label": {
            "default": "Module Settings"
          },
          "Parameters": [
            "RootDomainName"
          ]
        },
        {
          "Label": {
            "default": "LambdaSharp Module Options"
          },
          "Parameters": [
            "Secrets"
          ]
        },
        {
          "Label": {
            "default": "LambdaSharp Dependencies"
          },
          "Parameters": [
            "LambdaSharpDeadLetterQueueArn",
            "LambdaSharpLoggingStreamArn",
            "LambdaSharpDefaultSecretKeyArn"
          ]
        },
        {
          "Label": {
            "default": "LambdaSharp Deployment Settings (DO NOT MODIFY)"
          },
          "Parameters": [
            "DeploymentBucketName",
            "DeploymentPrefix",
            "DeploymentPrefixLowercase",
            "DeploymentParent"
          ]
        }
      ]
    },
    "LambdaSharp::Manifest": {
      "Version": "2018-11-28",
      "ModuleName": "TestModule",
      "ModuleVersion": "1.0",
      "Hash": "8AD34C1BCA775FEF147D41CA4DC1B014",
      "GitSha": "0123456789ABCDEF0123456789ABCDEF01234567",
      "Pragmas": [],
      "Assets": [],
      "ResourceFullNames": {
        "RootDomainName": "RootDomainName",
        "MyResource": "MyResource",
        "Module": "Module",
        "ModuleId": "Module::Id",
        "ModuleName": "Module::Name",
        "ModuleVersion": "Module::Version",
        "Secrets": "Secrets",
        "LambdaSharp": "LambdaSharp",
        "LambdaSharpDeadLetterQueueArn": "LambdaSharp::DeadLetterQueueArn",
        "LambdaSharpLoggingStreamArn": "LambdaSharp::LoggingStreamArn",
        "LambdaSharpDefaultSecretKeyArn": "LambdaSharp::DefaultSecretKeyArn",
        "ModuleDeadLetterQueueArn": "Module::DeadLetterQueueArn",
        "ModuleLoggingStreamArn": "Module::LoggingStreamArn",
        "ModuleDefaultSecretKeyArn": "Module::DefaultSecretKeyArn",
        "DeploymentBucketName": "DeploymentBucketName",
        "DeploymentPrefix": "DeploymentPrefix",
        "DeploymentPrefixLowercase": "DeploymentPrefixLowercase",
        "DeploymentParent": "DeploymentParent",
        "ModuleRegistration": "Module::Registration"
      }
    }
  }
}