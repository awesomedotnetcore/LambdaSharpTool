# MindTouch Î»#
# Copyright (C) 2018 MindTouch, Inc.
# www.mindtouch.com  oss@mindtouch.com
#
# For community documentation and downloads visit mindtouch.com;
# please review the licensing section.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

Module: LambdaSharpRegistrar
Version: 0.5-WIP
Description: LambdaSharp Modules and Functions Registrar
Pragmas:
  - no-module-registration

Outputs:

  - CustomResource: LambdaSharp::Register::Module
    Description: Custom resources for registering LambdaSharp modules
    Handler: RegistrationTopic
    Properties:
      Request:
        - Name: ModuleId
          Required: true
        - Name: ModuleName
          Required: true
        - Name: ModuleVersion
          Required: true
      Response:
        - Name: Registration

  - CustomResource: LambdaSharp::Register::Function
    Description: Custom resources for registering LambdaSharp functions
    Handler: RegistrationTopic
    Properties:
      Request:
        - Name: ModuleId
          Required: true
        - Name: FunctionId
          Required: true
        - Name: FunctionName
          Required: true
        - Name: FunctionLogGroupName
          Required: true
        - Name: FunctionMaxMemory
          Required: true
        - Name: FunctionMaxDuration
          Required: true
        - Name: FunctionPlatform
          Required: true
        - Name: FunctionFramework
          Required: true
        - Name: FunctionLanguage
          Required: true
      Response:
        - Name: Registration

  - Export: ErrorReportTopic
    Description: SNS topic for LambdaSharp module errors
    Value: !Ref ErrorReportTopic

  - Export: UsageReportTopic
    Description: SNS topic for LambdaSharp function usage reports
    Value: !Ref UsageReportTopic

Entries:

  # Rollbar Settings
  - Parameter: RollbarReadAccessToken
    Section: Rollbar Settings
    Label: Read Access Token
    Description: Account-level token for read operations
    Type: Secret
    Scope: Register
    Default: ""

  - Parameter: RollbarWriteAccessToken
    Section: Rollbar Settings
    Label: Write Access Token
    Description: Account-level token for write operations
    Type: Secret
    Scope: Register
    Default: ""

  - Parameter: RollbarProjectPrefix
    Section: Rollbar Settings
    Label: Project Prefix
    Description: Optional prefix when creating Rollbar projects
    Scope: Register
    Default: ""

  # Firehose Settings
  - Parameter: EnableFirehose
    Section: Firehose Settings
    Label: Enable Firehose
    Description: Enable Kinesis Firehose logging to S3 Bucket
    Type: String
    Default: no
    AllowedValues:
      - yes
      - no

  # Resources
  - Resource: LoggingStreamReference
    Description: Reference to the Kinesis stream used to ingest the function logs
    Type: AWS::Kinesis::Stream
    Allow: Subscribe
    Value: !Ref Module::LoggingStreamArn

  - Resource: RegistrationTopic
    Description: Custom resource topic for registering LambdaSharp modules
    Type: AWS::SNS::Topic
    Allow: Subscribe

  - Resource: ErrorReportTopic
    Description: SNS topic for LambdaSharp module errors
    Scope: ProcessLogEvents
    Type: AWS::SNS::Topic
    Allow: Publish

  - Resource: UsageReportTopic
    Description: SNS topic for LambdaSharp function usage reports
    Scope: ProcessLogEvents
    Type: AWS::SNS::Topic
    Allow: Publish

  - Resource: RegistrationTable
    Description: DynamoDb table for storing function registrations
    Scope: "*"
    Type: AWS::DynamoDB::Table
    Allow: ReadWrite
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: S
      KeySchema:
        - AttributeName: Id
          KeyType: HASH

  - Variable: Firehose
    Entries:

    - Condition: IsEnabled
      Value: !Equals [ !Ref EnableFirehose, "yes" ]

    - Resource: LoggingBucket
      If: Firehose::IsEnabled
      Scope: Finalizer
      Type: AWS::S3::Bucket
      Allow: ReadWrite
      Properties:
        LifecycleConfiguration:
          Rules:
            - Id: LogDeletion
              ExpirationInDays: 90
              Status: Enabled

    - Resource: LoggingStream
      If: Firehose::IsEnabled
      Type: AWS::KinesisFirehose::DeliveryStream
      Properties:
        DeliveryStreamType: KinesisStreamAsSource
        KinesisStreamSourceConfiguration:
          KinesisStreamARN: !Ref LoggingStreamReference
          RoleARN: !GetAtt Firehose::LoggingRole.Arn
        S3DestinationConfiguration:
          BucketARN: !GetAtt Firehose::LoggingBucket.Arn
          CloudWatchLoggingOptions:
            Enabled: true
            LogGroupName: !Ref Firehose::CloudWatchGroup
            LogStreamName: !Ref Firehose::CloudWatchStream
          Prefix: "firehose/"
          BufferingHints:
            IntervalInSeconds: 60
            SizeInMBs: 100
          CompressionFormat: GZIP
          EncryptionConfiguration:
            NoEncryptionConfig: NoEncryption
          RoleARN: !GetAtt Firehose::LoggingRole.Arn

    - Resource: CloudWatchGroup
      If: Firehose::IsEnabled
      Type: AWS::Logs::LogGroup
      Properties:
        RetentionInDays: 30

    - Resource: CloudWatchStream
      If: Firehose::IsEnabled
      Type: AWS::Logs::LogStream
      Properties:
        LogGroupName: !Ref Firehose::CloudWatchGroup

    - Resource: LoggingRole
      If: Firehose::IsEnabled
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            Sid: FirehoseLoggingPrincipal
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: sts:AssumeRole
        Policies:
          - PolicyName: !Sub "${AWS::StackName}FirehoseLoggingPolicy"
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Sid: FirehoseLoggingDestinationS3Access
                  Effect: Allow
                  Action:
                    - s3:AbortMultipartUpload
                    - s3:GetBucketLocation
                    - s3:GetObject
                    - s3:ListBucket
                    - s3:ListBucketMultipartUploads
                    - s3:PutObject
                  Resource:
                    - !Sub "${Firehose::LoggingBucket.Arn}"
                    - !Sub "${Firehose::LoggingBucket.Arn}/*"
                - Sid: FirehoseLoggingSourceStreamAccess
                  Effect: Allow
                  Action:
                    - kinesis:DescribeStream
                    - kinesis:GetShardIterator
                    - kinesis:GetRecords
                  Resource: !Ref Module::LoggingStreamArn
                - Sid: FirehoseLoggingCloudWatchLogsAccess
                  Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:DescribeLogGroups
                    - logs:DescribeLogStreams
                    - logs:PutLogEvents
                    - logs:GetLogEvents
                    - logs:FilterLogEvents
                  Resource: arn:aws:logs:*:*:*

  # Functions
  - Function: ProcessLogEvents
    Description: Process log events from all LambdaSharp module functions
    Memory: 128
    Timeout: 30
    Sources:
      - Kinesis: LoggingStreamReference

  - Function: Register
    Description: Register LambdaSharp modules and functions
    Memory: 128
    Timeout: 30
    Sources:
      - Topic: RegistrationTopic

  - Function: Finalizer
    If: Firehose::IsEnabled
    Description: Clean-up on deletion
    Memory: 256
    Timeout: 900

